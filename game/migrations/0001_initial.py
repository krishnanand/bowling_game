# Generated by Django 2.0.6 on 2018-07-15 06:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import functools
import game.fields
import game.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GameRegistration',
            fields=[
                ('game_id', models.CharField(default=functools.partial(game.models.random_string, *(), **{'char_length': 16}), help_text='Unique bowling game id', max_length=32, primary_key=True, serialize=False)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            bases=(models.Model, game.models.ErrorModel, object),
        ),
        migrations.CreateModel(
            name='ScorePerFrame',
            fields=[
                ('score_per_frame_id', models.AutoField(primary_key=True, serialize=False)),
                ('frame', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('first_attempt_score', game.fields.BowlingScoreField(help_text='Score in the first attempt.', max_length=2, verbose_name='Score for the first attempt.')),
                ('second_attempt_score', game.fields.BowlingScoreField(help_text='Score in the second attempt.', max_length=2, verbose_name='Score for the first attempt.')),
                ('third_attempt_score', game.fields.BowlingScoreField(help_text='Score in the 3rd attempt. This applies only to 10th frame.', max_length=2, verbose_name='Score for the first attempt.')),
                ('frame_score', models.PositiveIntegerField(help_text='Current for the given frame.', null=True, validators=[django.core.validators.MaxValueValidator(30)])),
                ('frame_version', models.PositiveIntegerField()),
                ('total_score_for_frame', models.PositiveIntegerField(help_text='Total score till this frame.', null=True, validators=[django.core.validators.MaxValueValidator(300)])),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_score', to='game.GameRegistration')),
            ],
            bases=(models.Model, game.models.ErrorModel, object),
        ),
        migrations.AddIndex(
            model_name='gameregistration',
            index=models.Index(fields=['game_id'], name='game_gamere_game_id_1f82a3_idx'),
        ),
        migrations.AddIndex(
            model_name='scoreperframe',
            index=models.Index(fields=['frame'], name='game_scorep_frame_cdd5f1_idx'),
        ),
        migrations.AddIndex(
            model_name='scoreperframe',
            index=models.Index(fields=['first_attempt_score'], name='game_scorep_first_a_6ab1d2_idx'),
        ),
        migrations.AddIndex(
            model_name='scoreperframe',
            index=models.Index(fields=['second_attempt_score'], name='game_scorep_second__3108c6_idx'),
        ),
        migrations.AddIndex(
            model_name='scoreperframe',
            index=models.Index(fields=['third_attempt_score'], name='game_scorep_third_a_b61e1a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='scoreperframe',
            unique_together={('frame', 'frame_version', 'game')},
        ),
    ]
